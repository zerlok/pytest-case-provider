name: Check On Pull Request

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  check:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.12", "3.13", "3.14" ]
    env:
      OS: ubuntu
      PYTHON: ${{ matrix.python-version }}
    steps:
      - uses: actions/checkout@v4
      - name: Install Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install poetry
        run: pip install poetry
      - name: Configure poetry
        run: |
          poetry config virtualenvs.create true
          poetry config virtualenvs.in-project false
      - name: Cache venv
        id: cache-venv
        uses: actions/cache@v4
        with:
          path: ~/.cache/pypoetry
          key: venv-${{ matrix.python-version }}-${{ hashFiles('poetry.lock') }}
      - name: Show poetry env info
        run: poetry env info
      - name: Install project dependencies
        run: poetry install --all-extras
      - name: Cache nox
        id: cache-nox
        uses: actions/cache@v4
        with:
          path: .nox
          key: nox-${{ matrix.python-version }}-${{ hashFiles('poetry.lock') }}-${{ hashFiles('noxfile.py') }}
      - name: Run nox sessions (mypy, ruff, pytest)
        run: poetry run nox -s mypy ruff pytest -P ${{ matrix.python-version }}
      - name: Upload results to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          env_vars: OS,PYTHON
